# Set this value to 'agree' to accept our license:
# LICENSE: https://github.com/calendso/calendso/blob/main/LICENSE
#
# Summary of terms:
# - The codebase has to stay open source, whether it was modified or not
# - You can not repackage or sell the codebase
# - Acquire a commercial license to remove these terms by emailing: license@cal.com
NEXT_PUBLIC_LICENSE_CONSENT=
LICENSE=

# BASE_URL and NEXT_PUBLIC_APP_URL are both deprecated. Both are replaced with one variable, NEXT_PUBLIC_WEBAPP_URL
# BASE_URL=http://localhost:3000
# NEXT_PUBLIC_APP_URL=http://localhost:3000

NEXT_PUBLIC_WEBAPP_URL=https://cal.${TOP_LEVEL_DOMAIN}
NEXT_PUBLIC_WEBSITE_URL=https://cal.${TOP_LEVEL_DOMAIN}
NEXTAUTH_URL=https://cal.${TOP_LEVEL_DOMAIN}
NEXT_PUBLIC_API_V2_URL=https://cal.${TOP_LEVEL_DOMAIN}/api/v2
NEXT_PUBLIC_APP_NAME="cal.${TOP_LEVEL_DOMAIN}"
NEXT_PUBLIC_SUPPORT_MAIL_ADDRESS=${SMTP_FROM}
NEXT_PUBLIC_COMPANY_NAME="Onestack.cloud"
# Set this to true in to disable new signups
NEXT_PUBLIC_DISABLE_SIGNUP=true
CRON_API_KEY=${SECRET_KEY_PLACEHOLDER}
ALLOWED_HOSTNAMES='"cal.${TOP_LEVEL_DOMAIN}","cal.dev.${TOP_LEVEL_DOMAIN}","localhost:3000","https://cal.${TOP_LEVEL_DOMAIN}"'

# Configure NEXTAUTH_URL manually if needed, otherwise it will resolve to {NEXT_PUBLIC_WEBAPP_URL}/api/auth
# NEXTAUTH_URL=http://localhost:3000/api/auth

# It is highly recommended that the NEXTAUTH_SECRET must be overridden and very unique
# Use `openssl rand -base64 32` to generate a key
NEXTAUTH_SECRET=${SECRET_KEY_PLACEHOLDER}

# Encryption key that will be used to encrypt CalDAV credentials, choose a random string, for example with `dd if=/dev/urandom bs=1K count=1 | md5sum`
CALENDSO_ENCRYPTION_KEY=${SECRET_KEY_PLACEHOLDER}

# Deprecation note: JWT_SECRET is no longer used
# JWT_SECRET=secret

POSTGRES_USER=${POSTGRES_USER}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
POSTGRES_DB=cal
DATABASE_HOST=${POSTGRES_HOST}:${POSTGRES_PORT}
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_HOST}/${POSTGRES_DB}
# Needed to run migrations while using a connection pooler like PgBouncer
# Use the same one as DATABASE_URL if you're not using a connection pooler
DATABASE_DIRECT_URL=${DATABASE_URL}
GOOGLE_API_CREDENTIALS=${GOOGLE_API_CREDENTIALS}
GOOGLE_LOGIN_ENABLED=false


# Set this to '1' if you don't want Cal to collect anonymous usage
CALCOM_TELEMETRY_DISABLED=1
DAILY_API_KEY=


# Used for the Office 365 / Outlook.com Calendar integration
MS_GRAPH_CLIENT_ID=${MS_GRAPH_CLIENT_ID}
MS_GRAPH_CLIENT_SECRET=${MS_GRAPH_CLIENT_SECRET}

HUBSPOT_CLIENT_ID=${HUBSPOT_CLIENT_ID}
HUBSPOT_CLIENT_SECRET=${HUBSPOT_CLIENT_SECRET}

# Used for the Zoom integration
ZOOM_CLIENT_ID=${ZOOM_CLIENT_ID}
ZOOM_CLIENT_SECRET=${ZOOM_CLIENT_SECRET}

ZOHOCRM_CLIENT_ID=${ZOHOCRM_CLIENT_ID}
ZOHOCRM_CLIENT_SECRET=${ZOHOCRM_CLIENT_SECRET}
# E-mail settings
# Configures the global From: header whilst sending emails.
EMAIL_FROM=${SMTP_FROM}

# Configure SMTP settings (@see https://nodemailer.com/smtp/).
EMAIL_SERVER_HOST=${SMTP_HOST}
EMAIL_SERVER_PORT=${SMTP_PORT}
EMAIL_SERVER_USER=${SMTP_USER}
EMAIL_SERVER_PASSWORD=${SMTP_PASSWORD}


# SENDGRID_API_KEY=""
# SENDGRID_EMAIL="cal@onestack.cloud"
# NEXT_PUBLIC_SENDGRID_SENDER_NAME="cal@onestack.cloud"

NODE_ENV=production

NEXT_PUBLIC_STRIPE_PUBLIC_KEY=${STRIPE_PUBIC_KEY}
STRIPE_PRIVATE_KEY=${STRIPE_SECRET_KEY}
STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
STRIPE_CLIENT_ID=${STRIPE_CLIENT_ID}
PAYMENT_FEE_FIXED=10
PAYMENT_FEE_PERCENTAGE=0.005

GIPHY_API_KEY=${GIPHY_API_KEY}
