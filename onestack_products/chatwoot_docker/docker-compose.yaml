version: "3"

services:
    base: &base
        image: chatwoot/chatwoot:latest
        env_file: .env ## Change this file for customized env variables
        volumes:
            - /data/storage:/app/storage

    rails:
        <<: *base
        # ports:
        #   - '127.0.0.1:3000:3000'
        environment:
            - NODE_ENV=production
            - RAILS_ENV=production
            - INSTALLATION_ENV=docker
        entrypoint: docker/entrypoints/rails.sh
        command: ["bundle", "exec", "rails", "s", "-p", "3000", "-b", "0.0.0.0"]
        restart: always
        networks:
            - traefik_default

        labels:
            - "traefik.enable=true"

            ## HTTPS: example of labels for the case if you are going to expose chatwoot to the
            ## internet using with HTTPS using traefik

            - "traefik.http.middlewares.http-redirect.redirectscheme.scheme=https"
            - "traefik.http.middlewares.http-redirect.redirectscheme.permanent=true"
            - "traefik.http.routers.chatwoot-http.entrypoints=web"
            - "traefik.http.routers.chatwoot-http.rule=Host(`chatwoot.${TOP_LEVEL_DOMAIN}`)"
            - "traefik.http.routers.chatwoot-http.middlewares=http-redirect"
            - "traefik.http.routers.chatwoot-https.entrypoints=websecure"
            - "traefik.http.routers.chatwoot-https.rule=Host(`chatwoot.${TOP_LEVEL_DOMAIN}`)"
            - "traefik.http.services.chatwoot-https.loadbalancer.server.port=3000"
            - "traefik.http.routers.chatwoot-https.tls=true"
            # Use localcert resolver for local development, otherwise use letsencrypt
            - "traefik.http.routers.chatwoot-https.tls.certresolver=${CERT_RESOLVER:-letsencrypt}"
            - "com.centurylinklabs.watchtower.lifecycle.post-update=docker compose run --rm rails bundle exec rails db:chatwoot_prepare"
    sidekiq:
        <<: *base
        environment:
            - NODE_ENV=production
            - RAILS_ENV=production
            - INSTALLATION_ENV=docker
        command: ["bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]
        restart: always
        networks:
            - traefik_default

networks:
    traefik_default:
        external: true
